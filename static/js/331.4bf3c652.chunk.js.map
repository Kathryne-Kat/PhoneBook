{"version":3,"file":"static/js/331.4bf3c652.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/ContactsPage/ContactsPage.module.css?0a45","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Contact/ContactsList.module.css?23cd","components/Contact/ContactList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactsPage_container__BnqXB\",\"wrap\":\"ContactsPage_wrap__9-5Ii\",\"titleH2\":\"ContactsPage_titleH2__EAuB1\",\"comment\":\"ContactsPage_comment__v8VBZ\",\"filterCont\":\"ContactsPage_filterCont__i163d\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectFilterContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Filter_title__pSkfx\",\"inputFilter\":\"Filter_inputFilter__8QMOp\",\"filter\":\"Filter_filter__vxThR\",\"filter_wrap\":\"Filter_filter_wrap__aWaAl\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { handleFilterSlice } from 'redux/contacts/contactsSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    dispatch(handleFilterSlice(e.target.value));\n  };\n\n  return (\n    <div className={css.filter_wrap}>\n      <label className={css.filter}>\n        <p className={css.title}>Find contacts by name</p>\n        <input\n          className={css.inputFilter}\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleFilter}\n        />\n      </label>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__eYb9o\",\"listItem\":\"ContactsList_listItem__hx14f\",\"name\":\"ContactsList_name__izzOF\",\"listDel\":\"ContactsList_listDel__UnpAV\"};","import css from './ContactsList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilterContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filterContacts = useSelector(selectFilterContacts);\n\n  return (\n    <ul className={css.list}>\n      {filterContacts.map(contact => {\n        return (\n          <li className={css.listItem} key={contact.id}>\n            <div>\n              <span className={css.name}> {contact.name}</span>:{' '}\n              {contact.number}\n            </div>\n            <button\n              className={css.listDel}\n              onClick={() => dispatch(deleteContact(contact.id))}\n              type=\"button\"\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"title\":\"ContactForm_title__jZguf\",\"btn\":\"ContactForm_btn__wll+u\",\"input\":\"ContactForm_input__Bl93P\"};","import { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handelChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    if (contacts.some(con => con.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    e.preventDefault();\n    dispatch(addContact({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        <p className={css.title}>Name</p>\n        <input\n          className={css.input}\n          placeholder=\"Tim Dalton\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handelChange}\n        />\n      </label>\n      <label>\n        <p className={css.title}>Number</p>\n        <input\n          className={css.input}\n          placeholder=\"123-1234-4567\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handelChange}\n        />\n      </label>\n      <button className={css.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import css from './ContactsPage.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Loader } from 'components/Loader/Loader';\nimport { selectContacts, selectLoading } from 'redux/contacts/selectors';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/Contact/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\n\nexport default function ContactsPage() {\n  const contacts = useSelector(selectContacts);\n  const loading = useSelector(selectLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.wrapAll}>\n      <div className={css.container}>\n        <div className={css.wrap}>\n          <div>\n            <ContactForm />\n          </div>\n          <div>\n            <h2 className={css.titleH2}>Contacts</h2>\n            {contacts.length > 0 ? (\n              <div className={css.filterCont}>\n                <Filter />\n                <ContactList />\n              </div>\n            ) : (\n              <p className={css.comment}>No contacts</p>\n            )}\n          </div>\n        </div>\n      </div>\n      {loading && <Loader />}\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectLoading","isLoading","selectFilter","filter","selectFilterContacts","createSelector","contact","name","toLowerCase","includes","Filter","useSelector","dispatch","useDispatch","className","css","type","value","onChange","e","handleFilterSlice","target","ContactList","filterContacts","map","number","onClick","deleteContact","id","ContactForm","useState","setName","setNumber","handelChange","onSubmit","some","con","alert","preventDefault","addContact","placeholder","pattern","title","required","ContactsPage","loading","useEffect","fetchContacts","length","Loader"],"sourceRoot":""}